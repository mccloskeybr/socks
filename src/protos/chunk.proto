syntax = "proto3";

import "config.proto";

message ChunkProto {
  oneof chunk_type {
    IndexMetadataProto metadata = 2;
    DirectoryProto directory = 3;
    DataProto data = 4;
  }
}

message IndexMetadataProto {
  IndexConfig config = 1;
  uint32 root_chunk_id = 2;
  uint32 num_directories = 3;
  uint32 next_chunk_id = 4;
  uint32 next_chunk_offset = 5;
}

message DirectoryProto {
  // NOTE: use fixed32 so updating the offset of an existing entry
  // won't cause the directory to suddenly exceed the chunk size.
  // TODO: play with other options.
  message Entry {
    fixed32 id = 1;
    fixed32 offset = 2;
  }
  repeated Entry entries = 1;
}

message DataProto {
  uint32 id = 1;
  message Value {
    oneof node_type {
      InternalRowProto row_node = 1;
      uint32 child_id = 2;
    }
  }
  repeated Value values = 2;
}

message InternalRowProto {
  string key = 1;
  repeated InternalColumnProto col_values = 2;
}

message InternalColumnProto {
  oneof value {
    bool is_empty = 1;
    int32 int_value = 2;
  }
}
